user                root;
worker_processes    1;
worker_cpu_affinity auto;
pid                 /opt/nginx/logs/nginx.pid;
error_log           /opt/nginx/logs/error.log info;

events {
    worker_connections 256;
}

http {
    include       /opt/nginx/conf/mime.types;
    charset       utf-8;
    default_type  application/octet-stream;
    directio      4m;
    sendfile      on;
    server_tokens on;
    tcp_nopush    on;
    tcp_nodelay   on;

    log_format main '$time_local $remote_addr|$http_x_forwarded_for|$remote_user '
                    '$connection|$connection_requests $request $status '
                    'S:${body_bytes_sent}|${bytes_sent} REF:$http_referer|$http_user_agent '
                    '$upstream_addr $upstream_response_time '
                    'REQ:$request_time|$request_length $msec';
    access_log /opt/nginx/logs/access.log main buffer=32k flush=1m;
    #access_log off;

    client_max_body_size 10m;
    client_body_buffer_size 16k;
    client_body_temp_path /opt/nginx/logs/client 1 2 2;
    fastcgi_temp_path /opt/nginx/logs/fastcgi 1 2 2;
    proxy_temp_path /opt/nginx/logs/proxy 1 2 2;
    scgi_temp_path /opt/nginx/logs/scgi 1 2 2;
    uwsgi_temp_path /opt/nginx/logs/uwsgi 1 2 2;
    lua_package_path "/opt/nginx/lib/lua/?.lua;;";

    gzip on;
    gzip_min_length 1024;

    keepalive_disable msie6;
    keepalive_requests 3;
    keepalive_timeout 65 60;

    open_file_cache max=1000 inactive=60s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 3;
    open_file_cache_errors on;

    # top-level http config for websocket headers
    # If Upgrade is defined, Connection = upgrade
    # If Upgrade is empty, Connection = close
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $host $ssl_home { default /opt/openssl/ssl/certs; }
    map $host $ssl_cer { default $ssl_home/letsencrypt/imssyang.com/fullchain.cer; }
    map $host $ssl_key { default $ssl_home/letsencrypt/imssyang.com/imssyang.com.key; }
    map $host $ssl_imss_cc_cer { default $ssl_home/namecheap/imss.cc/imss_cc_chain.crt; }
    map $host $ssl_imss_cc_key { default $ssl_home/namecheap/imss.cc/imss_cc.key; }

    include /opt/nginx/conf/http/server.*;
}

#
# https://github.com/arut/nginx-rtmp-module/wiki/Directives#application
#

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /opt/nginx/logs;

rtmp {
    log_format rtmp '$time_local $remote_addr|$connection $command $app/$name?$args '
                    'TC:$tcurl SWF:$swfurl PAGE:$pageurl S:$bytes_sent R:$bytes_received '
                    'STIME:$session_time SRTIME:$session_readable_time MS:$msec '
                    '$flashver';
    access_log /opt/nginx/logs/rtmp_access.log rtmp;

    server {
        listen 1935;
        timeout 60s;
        ping 1m;
        ping_timeout 30s;
        max_streams 32;
        ack_window 5000000;
        chunk_size 4096;
        max_message 1M;
        buflen 1s;
    
        include /opt/nginx/conf/rtmp/application.*;
    }
}

